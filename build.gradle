plugins {
	id 'org.springframework.boot' version '2.2.7.BUILD-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'war'
}

group = 'com.tdl'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	//json 객체로 맵핑하기 위해 Gson라이브러리 추가
	implementation('com.google.code.gson:gson')
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	compile('org.apache.tomcat.embed:tomcat-embed-jasper')
	compile('org.springframework.boot:spring-boot-starter-mustache')
	compile('com.h2database:h2')
	compile('javax.servlet:jstl:1.2')
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	/*compile('org.springframework.boot:spring-boot-starter-oauth2-client')*/
	compile('org.springframework.session:spring-session-jdbc')
}

test {
	useJUnitPlatform()
}
